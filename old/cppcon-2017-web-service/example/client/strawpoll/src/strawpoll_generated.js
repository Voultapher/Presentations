/*eslint-disable */
// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Strawpoll = Strawpoll || {};

/**
 * @enum
 */
Strawpoll.RequestType = {
  Poll: 0,
  Result: 1
};

/**
 * @enum
 */
Strawpoll.ResponseType = {
  Poll: 0,
  Result: 1,
  Error: 2
};

/**
 * @constructor
 */
Strawpoll.Poll = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Strawpoll.Poll}
 */
Strawpoll.Poll.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Strawpoll.Poll=} obj
 * @returns {Strawpoll.Poll}
 */
Strawpoll.Poll.getRootAsPoll = function(bb, obj) {
  return (obj || new Strawpoll.Poll).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Strawpoll.Poll.prototype.title = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Strawpoll.Poll.prototype.options = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Strawpoll.Poll.prototype.optionsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Strawpoll.Poll.startPoll = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} titleOffset
 */
Strawpoll.Poll.addTitle = function(builder, titleOffset) {
  builder.addFieldOffset(0, titleOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
Strawpoll.Poll.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(1, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Strawpoll.Poll.createOptionsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Strawpoll.Poll.startOptionsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Strawpoll.Poll.endPoll = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Strawpoll.Result = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Strawpoll.Result}
 */
Strawpoll.Result.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Strawpoll.Result=} obj
 * @returns {Strawpoll.Result}
 */
Strawpoll.Result.getRootAsResult = function(bb, obj) {
  return (obj || new Strawpoll.Result).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {flatbuffers.Long}
 */
Strawpoll.Result.prototype.votes = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt64(this.bb.__vector(this.bb_pos + offset) + index * 8) : this.bb.createLong(0, 0);
};

/**
 * @returns {number}
 */
Strawpoll.Result.prototype.votesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Strawpoll.Result.startResult = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} votesOffset
 */
Strawpoll.Result.addVotes = function(builder, votesOffset) {
  builder.addFieldOffset(0, votesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Long>} data
 * @returns {flatbuffers.Offset}
 */
Strawpoll.Result.createVotesVector = function(builder, data) {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Strawpoll.Result.startVotesVector = function(builder, numElems) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Strawpoll.Result.endResult = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Strawpoll.Request = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Strawpoll.Request}
 */
Strawpoll.Request.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Strawpoll.Request=} obj
 * @returns {Strawpoll.Request}
 */
Strawpoll.Request.getRootAsRequest = function(bb, obj) {
  return (obj || new Strawpoll.Request).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Strawpoll.RequestType}
 */
Strawpoll.Request.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Strawpoll.RequestType} */ (this.bb.readInt8(this.bb_pos + offset)) : Strawpoll.RequestType.Poll;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Strawpoll.Request.prototype.fingerprint = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {flatbuffers.Long}
 */
Strawpoll.Request.prototype.vote = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 */
Strawpoll.Request.startRequest = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Strawpoll.RequestType} type
 */
Strawpoll.Request.addType = function(builder, type) {
  builder.addFieldInt8(0, type, Strawpoll.RequestType.Poll);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} fingerprintOffset
 */
Strawpoll.Request.addFingerprint = function(builder, fingerprintOffset) {
  builder.addFieldOffset(1, fingerprintOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} vote
 */
Strawpoll.Request.addVote = function(builder, vote) {
  builder.addFieldInt64(2, vote, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Strawpoll.Request.endRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Strawpoll.Response = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Strawpoll.Response}
 */
Strawpoll.Response.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Strawpoll.Response=} obj
 * @returns {Strawpoll.Response}
 */
Strawpoll.Response.getRootAsResponse = function(bb, obj) {
  return (obj || new Strawpoll.Response).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Strawpoll.ResponseType}
 */
Strawpoll.Response.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Strawpoll.ResponseType} */ (this.bb.readInt8(this.bb_pos + offset)) : Strawpoll.ResponseType.Poll;
};

/**
 * @param {Strawpoll.Poll=} obj
 * @returns {Strawpoll.Poll|null}
 */
Strawpoll.Response.prototype.poll = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Strawpoll.Poll).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {Strawpoll.Result=} obj
 * @returns {Strawpoll.Result|null}
 */
Strawpoll.Response.prototype.result = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Strawpoll.Result).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Strawpoll.Response.prototype.error = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Strawpoll.Response.startResponse = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Strawpoll.ResponseType} type
 */
Strawpoll.Response.addType = function(builder, type) {
  builder.addFieldInt8(0, type, Strawpoll.ResponseType.Poll);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} pollOffset
 */
Strawpoll.Response.addPoll = function(builder, pollOffset) {
  builder.addFieldOffset(1, pollOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} resultOffset
 */
Strawpoll.Response.addResult = function(builder, resultOffset) {
  builder.addFieldOffset(2, resultOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} errorOffset
 */
Strawpoll.Response.addError = function(builder, errorOffset) {
  builder.addFieldOffset(3, errorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Strawpoll.Response.endResponse = function(builder) {
  var offset = builder.endObject();
  return offset;
};

// Exports for Node.js and RequireJS
this.Strawpoll = Strawpoll;